#!/usr/bin/env python3

import rospy
from geometry_msgs.msg import Twist
from std_msgs.msg import String
import time



if __name__ == '__main__':
    try:
        print("RUNNING TURTLEBOT CONTROL SCRIPT")
        rospy.init_node('turtlebot3_control')
        pub = rospy.Publisher(name='cmd_vel', data_class=Twist, queue_size=10)
        turtlebot3_model = rospy.get_param("model", "burger")

        twist = Twist()

        # linear_vel units: m/s
        control_linear_vel = 0.1
        twist.linear.x = control_linear_vel; twist.linear.y = 0.0; twist.linear.z = 0.0
        # angular_vel units: rad/s
        control_angular_vel = 0
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        time.sleep(6)
        
        print("Starting navigation...")
        pub.publish(twist)
        time.sleep(3)
       
        print("Twist 1...")
        control_angular_vel = -0.523
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        pub.publish(twist)
        time.sleep(1)

        control_angular_vel = 0
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        pub.publish(twist)
        time.sleep(8)

        print("Twist 2...")
        control_angular_vel = 0.523
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        pub.publish(twist)
        time.sleep(1)

        control_angular_vel = 0
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        pub.publish(twist)
        time.sleep(2)

        print("Twist 3...")
        control_angular_vel = 1.75
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        pub.publish(twist)
        time.sleep(1)

        control_angular_vel = 0
        twist.angular.x = 0.0; twist.angular.y = 0.0; twist.angular.z = control_angular_vel
        pub.publish(twist)
        time.sleep(5)

        print("Done!")
        control_linear_vel = 0
        twist.linear.x = control_linear_vel; twist.linear.y = 0.0; twist.linear.z = 0.0
        pub.publish(twist)
        
    except rospy.ROSInterruptException:
        pass
